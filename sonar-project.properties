# Id of your project on your SonarQube server. It must be unique for the SonarQube instance.
sonar.projectKey=GIT_INT:GIT_INT_mykey
 
# Visual name you will see first as an user. It must also be unique.
sonar.projectName=MyProjectName
 
sonar.projectVersion=2.0.0

# Forces the analysis step to poll your SonarQube instance until the Quality Gate status is available.
# Set quality gate to fail on the GitLab side when it fails on the SonarQube side.
# sonar.qualitygate.wait=true
 
# URL of your SonarQube instance.
sonar.host.url=https://sonarqube.opscloud.mycompany.int/
 
# Encoding of the source code. Default is default system encoding.
sonar.sourceEncoding=UTF-8

sonar.sources=.

# Exclude test from analysis
sonar.tests=.

sonar.java.binaries=**/target/classes

sonar.coverage.jacoco.xmlReportPaths=src/target/site/jacoco/jacoco.xml
sonar.junit.reportPaths=src/target/surefire-reports

# Exclude APT generated files, C, and Javascript files
sonar.exclusions= CICD/**, **/target/**, *.xml, *.py, *.html, *.sql
sonar.c.file.suffixes=-
sonar.cpp.file.suffixes=-
sonar.objc.file.suffixes=-
sonar.javascript.file.suffixes=-
sonar.typescript.file.suffixes=-
sonar.css.file.suffixes=-
sonar.python.file.suffixes=-
sonar.html.file.suffixes=-
sonar.xml.file.suffixes=-
sonar.plsql.file.suffixes=-

# Include test subdirectories in test scope (to be able to view total number of unit test)
sonar.test.inclusions=**/test/**

# Make sure that unit test reports is included after exclusion
sonar.inclusions=**, **/target/**/jacoco.xml, **/target/surefire-reports/**
